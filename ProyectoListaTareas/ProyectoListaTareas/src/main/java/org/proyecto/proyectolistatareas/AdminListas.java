/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.proyecto.proyectolistatareas;

import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;





public class AdminListas extends javax.swing.JFrame {

    /**
     * Creates new form AdminListas
     */
    public AdminListas() {
        initComponents();
        cargarTablaListas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        EditarListaDeTareasDialog = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        editarDescripcionTbx = new javax.swing.JTextField();
        editarIdTbx = new javax.swing.JTextField();
        editarNombreTbx = new javax.swing.JTextField();
        editarGuardarBtn = new javax.swing.JButton();
        editarCancelarBtn = new javax.swing.JButton();
        tableScrollPane = new javax.swing.JScrollPane();
        listaTareasTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nombreTbx = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        descripcionTbx = new javax.swing.JTextField();
        agregarListaBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        resetTableBtn = new javax.swing.JButton();
        guardarTableBtn = new javax.swing.JButton();
        volverBtn = new javax.swing.JButton();
        borrarListaBtn = new javax.swing.JButton();
        editarBtn = new javax.swing.JButton();

        EditarListaDeTareasDialog.setTitle("Editar Lista");
        EditarListaDeTareasDialog.setBounds(new java.awt.Rectangle(25, 25, 355, 280));
        EditarListaDeTareasDialog.setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setText("Id: ");

        jLabel6.setText("Nombre:");

        jLabel7.setText("Descripcion:");

        editarIdTbx.setEditable(false);
        editarIdTbx.setText("jTextField1");

        editarNombreTbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarNombreTbxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editarNombreTbx, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editarIdTbx, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editarDescripcionTbx, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(editarIdTbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(editarNombreTbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(editarDescripcionTbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        editarGuardarBtn.setText("Guardar");
        editarGuardarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarGuardarBtnActionPerformed(evt);
            }
        });

        editarCancelarBtn.setText("Cancelar");
        editarCancelarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarCancelarBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout EditarListaDeTareasDialogLayout = new javax.swing.GroupLayout(EditarListaDeTareasDialog.getContentPane());
        EditarListaDeTareasDialog.getContentPane().setLayout(EditarListaDeTareasDialogLayout);
        EditarListaDeTareasDialogLayout.setHorizontalGroup(
            EditarListaDeTareasDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditarListaDeTareasDialogLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditarListaDeTareasDialogLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(editarGuardarBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(editarCancelarBtn)
                .addGap(92, 92, 92))
        );
        EditarListaDeTareasDialogLayout.setVerticalGroup(
            EditarListaDeTareasDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditarListaDeTareasDialogLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(EditarListaDeTareasDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editarGuardarBtn)
                    .addComponent(editarCancelarBtn))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Administrar Listas");

        listaTareasTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        listaTareasTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaTareasTableMouseClicked(evt);
            }
        });
        tableScrollPane.setViewportView(listaTareasTable);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Nombre: ");

        jLabel2.setText("Description: ");

        agregarListaBtn.setText("Agregar");
        agregarListaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarListaBtnActionPerformed(evt);
            }
        });

        jLabel3.setText("Agregar nueva lista");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descripcionTbx, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombreTbx, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(agregarListaBtn, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(nombreTbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descripcionTbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(agregarListaBtn)
                .addGap(20, 20, 20))
        );

        resetTableBtn.setText("Reset");
        resetTableBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetTableBtnActionPerformed(evt);
            }
        });

        guardarTableBtn.setText("Guardar Cambios");
        guardarTableBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarTableBtnActionPerformed(evt);
            }
        });

        volverBtn.setText("Volver");
        volverBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverBtnActionPerformed(evt);
            }
        });

        borrarListaBtn.setText("Borrar");
        borrarListaBtn.setEnabled(false);
        borrarListaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarListaBtnActionPerformed(evt);
            }
        });

        editarBtn.setText("Editar");
        editarBtn.setEnabled(false);
        editarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 628, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(borrarListaBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editarBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(guardarTableBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resetTableBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(volverBtn)))
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(guardarTableBtn)
                        .addComponent(resetTableBtn)
                        .addComponent(volverBtn))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(borrarListaBtn)
                        .addComponent(editarBtn)))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resetTableBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetTableBtnActionPerformed
        cargarTablaListas();
    }//GEN-LAST:event_resetTableBtnActionPerformed

    private void volverBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverBtnActionPerformed
        this.dispose();
        new MainScreen().setVisible(true);
    }//GEN-LAST:event_volverBtnActionPerformed

    private void guardarTableBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarTableBtnActionPerformed
        
        Lista listaDeTareasList =  new Lista();
        
        // Recorre los rows de la tabla
        for (int i = 0; i < listaTareasTable.getRowCount(); i++) {  // Loop through the rows
            
            // Convierte los rows de la tabla en objetos ListaTareas y los agrega a la lista
            listaDeTareasList.agregarAlFinal(new ListaTareas(
                    listaTareasTable.getValueAt(i, 0).toString(), 
                    listaTareasTable.getValueAt(i, 1).toString(), 
                    listaTareasTable.getValueAt(i, 2).toString(), 
                    listaTareasTable.getValueAt(i, 3).toString()));         
      
        }

        FileHelper.guardarListasDeTareas(listaDeTareasList);
        
    }//GEN-LAST:event_guardarTableBtnActionPerformed

    private void agregarListaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarListaBtnActionPerformed
        
        String id = generarId(); // Genera un id para la lista de tareas
        String nombre = nombreTbx.getText(); 
        String descripcion = descripcionTbx.getText();
        String fecha = new Date().toString(); // Obtiene la fecha actual del sistema y lo convierte a String
        
        // Se valida que los campos no esten vacios
        if(nombre != null && !nombre.equals("") && descripcion != null && !descripcion.equals("")) {
            
            // Obtiene el Model de la tabla, para modificar su contenido (Rows)
            DefaultTableModel model = (DefaultTableModel) this.listaTareasTable.getModel();

            // Agrega la tarea al Model de la tabla (Este cambio al modificar el model, se actualiza automaticamente en la tabla)
            model.addRow(new String [] {id, nombre, descripcion, fecha});

            // Se limpian los campos
            nombreTbx.setText("");
            descripcionTbx.setText("");
            
        } else {
            JOptionPane.showMessageDialog(getContentPane(), "Todos los campos son requeridos");
        }
        
    }//GEN-LAST:event_agregarListaBtnActionPerformed

    private void borrarListaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarListaBtnActionPerformed
        
        // Obtiene el nombre de la tarea que se desea borrar
        String nombreListaSeleccionada = listaTareasTable.getValueAt(listaTareasTable.getSelectedRow(), 1).toString();
        

        // Muestra un dialogo de confirmacion antes de borrar la tarea
        int resultado = JOptionPane.showConfirmDialog(this.getContentPane(), "Seguro que desea eliminar lista: " + nombreListaSeleccionada);
        

        // Si la respuesta fue si, ocurre lo siguiente
        if(resultado == JOptionPane.YES_OPTION) {
            // Obtiene el Model de la tabla, para modificar su contenido (Rows)
            DefaultTableModel model = (DefaultTableModel) this.listaTareasTable.getModel();
            // Remueve la tarea del Model de la tabla (Este cambio al modificar el model, se actualiza automaticamente en la tabla)
            model.removeRow(listaTareasTable.getSelectedRow());
            // Se vuelve a deshabilitar el boton de borrado, debido a que la tarea seleccionada, ya no existe
            borrarListaBtn.setEnabled(false);
        }
        
    }//GEN-LAST:event_borrarListaBtnActionPerformed

    private void listaTareasTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaTareasTableMouseClicked
        
        // Si hay algun table row seleccionado, se habilita el boton de borrado, si no se deshabilita
        if(listaTareasTable.getSelectedRow() != -1) {
            borrarListaBtn.setEnabled(true);
            editarBtn.setEnabled(true);
        } else {
            borrarListaBtn.setEnabled(false);
            editarBtn.setEnabled(false);
        }
        
    }//GEN-LAST:event_listaTareasTableMouseClicked

    private void editarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarBtnActionPerformed
        
        int rowIndex = listaTareasTable.getSelectedRow();
        String id = listaTareasTable.getModel().getValueAt(rowIndex, 0).toString();
        String nombre = listaTareasTable.getModel().getValueAt(rowIndex, 1).toString();
        String descripcion = listaTareasTable.getModel().getValueAt(rowIndex, 2).toString();
        
        editarIdTbx.setText(id);
        editarNombreTbx.setText(nombre);
        editarDescripcionTbx.setText(descripcion);
        
        EditarListaDeTareasDialog.setVisible(true);
        
    }//GEN-LAST:event_editarBtnActionPerformed

    private void editarNombreTbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarNombreTbxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editarNombreTbxActionPerformed

    private void editarGuardarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarGuardarBtnActionPerformed
        
        String nombre = editarNombreTbx.getText();
        String descripcion = editarDescripcionTbx.getText();
        
        // Se valida que los campos no esten vacios
        if(nombre != null && !nombre.equals("") && descripcion != null && !descripcion.equals("")) {
        
            // Se optiene el numero de row seleccionado en la tabla
            int rowIndex = listaTareasTable.getSelectedRow();

            // Se obtiene el modelo de la tabla y posteriormente se actualiza el valor utilizando el numero de row y el numero de columna
            listaTareasTable.getModel().setValueAt(nombre, rowIndex, 1);
            listaTareasTable.getModel().setValueAt(descripcion, rowIndex, 2);
            
            // Se cierra el dialog
            EditarListaDeTareasDialog.dispose();
            
        } else {
            JOptionPane.showMessageDialog(getContentPane(), "Todos los campos son requeridos");
        }
        
    }//GEN-LAST:event_editarGuardarBtnActionPerformed

    private void editarCancelarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarCancelarBtnActionPerformed
        EditarListaDeTareasDialog.dispose();
    }//GEN-LAST:event_editarCancelarBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminListas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminListas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminListas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminListas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminListas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog EditarListaDeTareasDialog;
    private javax.swing.JButton agregarListaBtn;
    private javax.swing.JButton borrarListaBtn;
    private javax.swing.JTextField descripcionTbx;
    private javax.swing.JButton editarBtn;
    private javax.swing.JButton editarCancelarBtn;
    private javax.swing.JTextField editarDescripcionTbx;
    private javax.swing.JButton editarGuardarBtn;
    private javax.swing.JTextField editarIdTbx;
    private javax.swing.JTextField editarNombreTbx;
    private javax.swing.JButton guardarTableBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTable listaTareasTable;
    private javax.swing.JTextField nombreTbx;
    private javax.swing.JButton resetTableBtn;
    private javax.swing.JScrollPane tableScrollPane;
    private javax.swing.JButton volverBtn;
    // End of variables declaration//GEN-END:variables

    private void cargarTablaListas() {
        
        String [] columnas = new String [] {"id","Nombre", "Descripcion", "Fecha de creacion"};
        
        try{
            // Carga las listas de tareas desde el archivo de texto
            Lista listasDeTareas = FileHelper.obtenerListasDeTareas();

            // Obtiene el tamaño de la lista
            int listaSize = listasDeTareas.getTamanio();

            // Se define la matrix que contendra la informacion del Table
            String tableData [][] = new String [listaSize][4];


            // Recorre la lista para ir agregando cada elemento al array de la tabla
            for(int i = 0; i < listaSize; i++) {

                ListaTareas lista = (ListaTareas) listasDeTareas.getValor(i);
                tableData[i][0] = lista.getId();
                tableData[i][1] = lista.getNombre();
                tableData[i][2] = lista.getDescripcion();
                tableData[i][3] = lista.getFecha();

            }

            // Obtiene el modelo de la tabla y le agrega el array con la informacion obtenida anteriormente
            DefaultTableModel model = new DefaultTableModel(tableData, columnas);
            this.listaTareasTable.setModel(model);
        
        } catch (Exception ex) {
            // En caso de error se loggea la informacion del error en la consola
            System.err.println("Error cargando datos de la tabla");
            ex.printStackTrace();
        }
    }
    
    /**
     * Genera un id utilizando la fecha, hora y milisegundos
     * 
     * @return id
     */
    private String generarId() {
        Date dNow = new Date();
        SimpleDateFormat ft = new SimpleDateFormat("yyMMddhhmmssMs");
        return ft.format(dNow);
    }
    
    
}
